return {
    -- Show document symbols in right window
    "simrat39/symbols-outline.nvim",
    lazy = true,
    cmd = "SymbolsOutline",
    keys = {
        { "<leader>co", "<cmd>SymbolsOutline<cr>", desc = "Symbols Outline Toggle (symbols-outline)" },
    },
    opts = {
        highlight_hovered_item = true,
        show_guides = true,
        auto_preview = false,
        position = 'right',
        relative_width = true,
        width = 25,
        auto_close = false,
        show_numbers = false,
        show_relative_numbers = false,
        show_symbol_details = true,
        preview_bg_highlight = 'Pmenu',
        autofold_depth = nil,
        auto_unfold_hover = true,
        fold_markers = { require("core.icons").ui.ChevronShortRight, require("core.icons").ui.ChevronShortDown },
        wrap = false,
        keymaps = {
            close = { "<Esc>", "q" },
            goto_location = "<Cr>",
            focus_location = "o",
            hover_symbol = "<C-\\>",
            toggle_preview = "K",
            rename_symbol = "r",
            code_actions = "a",
            fold = "h",
            unfold = "l",
            fold_all = "W",
            unfold_all = "E",
            fold_reset = "R",
        },
        lsp_blacklist = {},
        symbol_blacklist = {},
        symbols = {
            Array = { icon = require("core.icons").kind.Array, hl = "@constant" },
            Boolean = { icon = require("core.icons").kind.Boolean, hl = "@boolean" },
            Class = { icon = require("core.icons").kind.Class, hl = "@type" },
            Component = { icon = require("core.icons").kind.Component, hl = "@function" },
            Constant = { icon = require("core.icons").kind.Constant, hl = "@constant" },
            Constructor = { icon = require("core.icons").kind.Constructor, hl = "@constructor" },
            Enum = { icon = require("core.icons").kind.Enum, hl = "@type" },
            EnumMember = { icon = require("core.icons").kind.EnumMember, hl = "@field" },
            Event = { icon = require("core.icons").kind.Event, hl = "@type" },
            Field = { icon = require("core.icons").kind.Field, hl = "@field" },
            File = { icon = require("core.icons").kind.File, hl = "@text.uri" },
            Fragment = { icon = require("core.icons").kind.Fragment, hl = "@constant" },
            Function = { icon = require("core.icons").kind.Function, hl = "@function" },
            Interface = { icon = require("core.icons").kind.Interface, hl = "@type" },
            Key = { icon = require("core.icons").kind.Key, hl = "@type" },
            Method = { icon = require("core.icons").kind.Method, hl = "@method" },
            Module = { icon = require("core.icons").kind.Module, hl = "@namespace" },
            Namespace = { icon = require("core.icons").kind.Namespace, hl = "@namespace" },
            Null = { icon = require("core.icons").kind.Null, hl = "@type" },
            Number = { icon = require("core.icons").kind.Number, hl = "@number" },
            Object = { icon = require("core.icons").kind.Object, hl = "@type" },
            Operator = { icon = require("core.icons").kind.Operator, hl = "@operator" },
            Package = { icon = require("core.icons").kind.Package, hl = "@namespace" },
            Property = { icon = require("core.icons").kind.Property, hl = "@method" },
            String = { icon = require("core.icons").kind.String, hl = "@string" },
            Struct = { icon = require("core.icons").kind.Struct, hl = "@type" },
            TypeParameter = { icon = require("core.icons").kind.TypeParameter, hl = "@parameter" },
            Variable = { icon = require("core.icons").kind.Variable, hl = "@constant" },
        }
    }
}
