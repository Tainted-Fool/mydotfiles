return {
    -- Show document symbols in right window
    "simrat39/symbols-outline.nvim",
    lazy = true,
    cmd = "SymbolsOutline",
    keys = {
        { "<leader>co", "<cmd>SymbolsOutline<cr>", desc = "Symbols Outline Toggle (symbols-outline)" },
    },
    config = function()
        local icons = require("core.icons")
        local opts = {
            highlight_hovered_item = true,
            show_guides = true,
            auto_preview = false,
            position = 'right',
            relative_width = true,
            width = 25,
            auto_close = false,
            show_numbers = false,
            show_relative_numbers = false,
            show_symbol_details = true,
            preview_bg_highlight = 'Pmenu',
            autofold_depth = nil,
            auto_unfold_hover = true,
            fold_markers = { icons.ui.ChevronShortRight, icons.ui.ChevronShortDown },
            wrap = false,
            keymaps = {
                close = { "<Esc>", "q" },
                goto_location = "<Cr>",
                focus_location = "o",
                hover_symbol = "<C-\\>",
                toggle_preview = "K",
                rename_symbol = "r",
                code_actions = "a",
                fold = "h",
                unfold = "l",
                fold_all = "W",
                unfold_all = "E",
                fold_reset = "R",
            },
            lsp_blacklist = {},
            symbol_blacklist = {},
            symbols = {
                Array = { icon = icons.kind.Array, hl = "@constant" },
                Boolean = { icon = icons.kind.Boolean, hl = "@boolean" },
                Class = { icon = icons.kind.Class, hl = "@type" },
                Component = { icon = icons.kind.Component, hl = "@function" },
                Constant = { icon = icons.kind.Constant, hl = "@constant" },
                Constructor = { icon = icons.kind.Constructor, hl = "@constructor" },
                Enum = { icon = icons.kind.Enum, hl = "@type" },
                EnumMember = { icon = icons.kind.EnumMember, hl = "@field" },
                Event = { icon = icons.kind.Event, hl = "@type" },
                Field = { icon = icons.kind.Field, hl = "@field" },
                File = { icon = icons.kind.File, hl = "@text.uri" },
                Fragment = { icon = icons.kind.Fragment, hl = "@constant" },
                Function = { icon = icons.kind.Function, hl = "@function" },
                Interface = { icon = icons.kind.Interface, hl = "@type" },
                Key = { icon = icons.kind.Key, hl = "@type" },
                Method = { icon = icons.kind.Method, hl = "@method" },
                Module = { icon = icons.kind.Module, hl = "@namespace" },
                Namespace = { icon = icons.kind.Namespace, hl = "@namespace" },
                Null = { icon = icons.kind.Null, hl = "@type" },
                Number = { icon = icons.kind.Number, hl = "@number" },
                Object = { icon = icons.kind.Object, hl = "@type" },
                Operator = { icon = icons.kind.Operator, hl = "@operator" },
                Package = { icon = icons.kind.Package, hl = "@namespace" },
                Property = { icon = icons.kind.Property, hl = "@method" },
                String = { icon = icons.kind.String, hl = "@string" },
                Struct = { icon = icons.kind.Struct, hl = "@type" },
                TypeParameter = { icon = icons.kind.TypeParameter, hl = "@parameter" },
                Variable = { icon = icons.kind.Variable, hl = "@constant" },
            }
        }
        require("symbols-outline").setup(opts)
    end
}
